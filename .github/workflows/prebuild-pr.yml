name: Prebuild Binaries

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  build:
    name: Prebuild Binaries for ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13, windows-latest]
    runs-on: ${{ matrix.os }}-latest
    timeout-minutes: 30
    steps:
      - name: Setup Dependencies
        if: matrix.os == 'ubuntu'
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update -y -qq
          sudo apt-get install -y g++-multilib gcc-multilib libcups2-dev libcups2-dev:i386 libc6-dev-i386 linux-libc-dev linux-libc-dev:i386
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: pip
      - name: Install Python setup tools
        run: pip install setuptools
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          registry-url: https://npm.pkg.github.com
          scope: '@grupoboticario'
          cache: npm
      - run: npm install-ci-test
      - name: Set release version
        run: npm --no-git-tag-version version $TAG
        env:
          TAG: ${{ github.event.release.tag_name }}
      - name: Apply patches
        run: npm run apply-patches
      - name: Build unix binaries 32 bits
        if: matrix.os != 'macos'
        run: npm run prebuild -- --strip --arch ia32
      - name: Build unix binaries 64 bits
        run: npm run prebuild -- --strip --arch x64
